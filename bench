#!/bin/bash

set -x

. config

function stress_nginx_https
{
    pids=()
    for _ in `seq 1 100`; do
        openssl s_time -connect ${nginx_server}:4400 -new -nbio -time 30 -cipher AES128-SHA > /dev/null & pids[${#pids[@]}]=$!
    done

    # Wait for all openssl s_time instances to finish
    for pid in ${pids[@]}; do
        wait $pid
    done
}

function bench_nginx_ssl_cps
{
    local dim_id=$1
    local output_file=output/${dim_id}_nginx_ssl_cps.csv

    printf 'number of nginx processes,CPS\n' >${output_file}
    for nr_nginx_proc in `seq 1 8`; do
        ssh ${nginx_server} "sed -i 's/worker_processes [1-9]+/worker_processes ${nr_nginx_proc}/g' \
                             ${remote_nginx_root}/conf/nginx.conf && \
                             ${remote_nginx_bin} -s stop && ${remote_nginx_bin}"

        # Test 3 times
        for _ in `seq 1 3`; do
            perf stat stress_nginx_https | grep >>output_${nr_nginx_proc}
        done

        # Calculate average CPS from n samples
        printf "${nr_nginx_proc}," >>${output_file} && \
            awk '{ total += $1; count++ } END { print total/count }' output_${nr_nginx_proc} >>${output_file} && \
            rm -f output_${nr_nginx_proc}
    done
}


case $1 in
    cps)
        bench_nginx_ssl_cps $2
        ;;
    *)
        echo "Usage: $0 {cps}"
        exit 1
esac

